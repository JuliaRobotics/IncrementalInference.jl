name: CI
on:
  pull_request:
  push:
    branches:
      - master
      - develop
      - release**
  workflow_dispatch:
jobs:
  test-stable:
    name: Julia ${{ matrix.version }} - ${{ matrix.os }} - ${{ matrix.arch }} - ${{ matrix.group }}
    runs-on: ${{ matrix.os }}
    env:
      JULIA_PKG_SERVER: ""
    strategy:
      fail-fast: false
      matrix:
        version:
          - '1.6'
          - '1.8'
          - 'nightly'
        os:
          - ubuntu-latest
        arch:
          - x64
        group:
          - 'basic_functional_group'
          - 'test_cases_group'
          - 'tmp_debug_group'
    steps:
      - uses: actions/checkout@v2
      - uses: julia-actions/setup-julia@v1
        with:
          version: ${{ matrix.version }}
          arch: ${{ matrix.arch }}
      - uses: julia-actions/cache@v1
      - uses: julia-actions/julia-buildpkg@v1
      - uses: julia-actions/julia-runtest@v1
        continue-on-error: ${{ matrix.version == 'nightly' }}
        env:
          IIF_TEST_GROUP: ${{ matrix.group }}
      - uses: julia-actions/julia-processcoverage@v1
      - uses: codecov/codecov-action@v2
        with:
          files: lcov.info
          fail_ci_if_error: false
        if: ${{ matrix.version != 'nightly' }}

  upstream-dev:
    #if: github.ref != 'refs/heads/release**'
    name: Upstream Dev
    runs-on: ubuntu-latest
    env: 
      JULIA_PKG_SERVER: ""
    steps:
      - uses: actions/checkout@v2

      - uses: julia-actions/setup-julia@v1
        with:
          version: 1.7
          arch: x64

      - uses: actions/cache@v1
        env:
          cache-name: cache-artifacts
        with:
          path: ~/.julia/artifacts
          key: ${{ runner.os }}-test-${{ env.cache-name }}-${{ hashFiles('**/Project.toml') }}
          restore-keys: |
            ${{ runner.os }}-test-${{ env.cache-name }}-
            ${{ runner.os }}-test-
            ${{ runner.os }}-

      - run: |
          git config --global user.name Tester
          git config --global user.email te@st.er
      
      - name: Upstream Dev
        run: |
          julia --project=@. --check-bounds=yes -e 'using Pkg; Pkg.add(PackageSpec(name="ApproxManifoldProducts",rev="master"));'
          julia --project=@. --check-bounds=yes -e 'using Pkg; Pkg.add(PackageSpec(name="DistributedFactorGraphs",rev="master"));' 
          julia --project=@. --check-bounds=yes -e 'using Pkg; Pkg.test("IncrementalInference"; coverage=false)'
        shell: bash
